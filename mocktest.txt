MOCK TEST

1.Create a database named CompanyDB

create database companyDB;
Query OK, 1 row affected (0.00 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| INVOICE            |
| companyDB          |
| information_schema |
| mysql              |
| performance_schema |
| shifana            |
| sys                |
+--------------------+
7 rows in set (0.00 sec)

use companyDB;
Database changed

2. Create two tables:

    Employees (EmpID, Name, Department, Salary )
    Departments (DeptID, DeptName, Location)
create table employees(empid int primary key,name varchar(25),department
varchar(25),salary int);
Query OK, 0 rows affected (0.02 sec)

mysql> desc employees;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| empid      | int         | NO   | PRI | NULL    |       |
| name       | varchar(25) | YES  |     | NULL    |       |
| department | varchar(25) | YES  |     | NULL    |       |
| salary     | int         | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)


create table departments(deptid int primary key,deptname varchar(25),location varchar(25));
Query OK, 0 rows affected (0.01 sec)

desc departments;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| deptid   | int         | NO   | PRI | NULL    |       |
| deptname | varchar(25) | YES  |     | NULL    |       |
| location | varchar(25) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
3 rows in set (0.01 sec)

3.Insert at least  5 records into the  table employees and  3 records into the department table.

insert into employees values(101,"shreya","mca",50000),(102,"soja","mca",40000),(103,"shifana","mba",30000),(104,"shahma","mba",20000),(105,"anjana","bba",10000);
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> select*from employees;
+-------+---------+------------+--------+
| empid | name    | department | salary |
+-------+---------+------------+--------+
|   101 | shreya  | mca        |  50000 |
|   102 | soja    | mca        |  40000 |
|   103 | shifana | mba        |  30000 |
|   104 | shahma  | mba        |  20000 |
|   105 | anjana  | bba        |  10000 |
+-------+---------+------------+--------+
5 rows in set (0.00 sec)

insert into departments values(10,"mca","kallanthode"),(11,"mba","kuttikatoor"),(12,"bba","kovoor");
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> select*from departments;
+--------+----------+-------------+
| deptid | deptname | location    |
+--------+----------+-------------+
|     10 | mca      | kallanthode |
|     11 | mba      | kuttikatoor |
|     12 | bba      | kovoor      |
+--------+----------+-------------+
3 rows in set (0.01 sec)


4.Write SQL queries to:

a) Select employees whose names start with ‘A’ using LIKE.

select name from employees where name like "A%";
+--------+
| name   |
+--------+
| anjana |
+--------+
1 row in set (0.00 sec)

b. Display the total number of employees in each department using GROUP BY.

select count(name)from employees group by department;
+-------------+
| count(name) |
+-------------+
|           2 |
|           2 |
|           1 |
+-------------+
3 rows in set (0.00 sec)

c.Retrieve all employee details sorted by salary in descending order using ORDER BY.

select *from employees order by salary desc;
+-------+---------+------------+--------+
| empid | name    | department | salary |
+-------+---------+------------+--------+
|   101 | shreya  | mca        |  50000 |
|   102 | soja    | mca        |  40000 |
|   103 | shifana | mba        |  30000 |
|   104 | shahma  | mba        |  20000 |
|   105 | anjana  | bba        |  10000 |
+-------+---------+------------+--------+
5 rows in set (0.00 sec)

d.Fetch employee names, their departments, and department locations using JOIN.

 select e.name as employee_name,e.department,d.location from employees e join departments d on e.department=d.deptname;
+---------------+------------+-------------+
| employee_name | department | location    |
+---------------+------------+-------------+
| shreya        | mca        | kallanthode |
| soja          | mca        | kallanthode |
| shifana       | mba        | kuttikatoor |
| shahma        | mba        | kuttikatoor |
| anjana        | bba        | kovoor      |
+---------------+------------+-------------+
5 rows in set (0.00 sec)

e.Find employees earning more than the average salary using a SUBQUERY.

select name,salary from employees where salary >(select avg(salary)from employees);
+--------+--------+
| name   | salary |
+--------+--------+
| shreya |  50000 |
| soja   |  40000 |
+--------+--------+
2 rows in set (0.01 sec)


f.Create a VIEW to display employees earning more than 55,000.

create view employee_salaries as select* from employees where salary>55000;
Query OK, 0 rows affected (0.00 sec)

mysql> select*from employee_salaries;
+-------+---------+------------+--------+
| empid | name    | department | salary |
+-------+---------+------------+--------+
|   103 | shifana | mba        |  60000 |
+-------+---------+------------+--------+
1 row in set (0.00 sec)

//VERIFIED

